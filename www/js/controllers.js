// Generated by CoffeeScript 1.9.0
(function() {
  angular.module('starter.controllers', []).controller('AppCtrl', function($scope, $ionicModal, $timeout) {
    $scope.loginData = {};
    $ionicModal.fromTemplateUrl('templates/login.html', {
      scope: $scope
    }).then(function(modal) {
      $scope.modal = modal;
    });
    $scope.closeLogin = function() {
      $scope.modal.hide();
    };
    $scope.login = function() {
      $scope.modal.show();
    };
    $scope.doLogin = function() {
      console.log('Doing login', $scope.loginData);
      $timeout((function() {
        $scope.closeLogin();
      }), 1000);
    };
  }).controller('PlaylistsCtrl', function($scope) {
    $scope.playlists = [
      {
        title: 'Reggae',
        id: 1
      }, {
        title: 'Chill',
        id: 2
      }, {
        title: 'Dubstep',
        id: 3
      }, {
        title: 'Indie',
        id: 4
      }, {
        title: 'Rap',
        id: 5
      }, {
        title: 'Cowbell',
        id: 6
      }
    ];
  }).controller('PlaylistCtrl', function($scope, $stateParams) {}).controller('GameCtrl', function($scope, $interval, $ionicPopup, Game) {
    var counter, gameOverAlert, goLength, maxSkips, newGameAlert, resetTimer, roundAlert, startTimer, stopTimer, timeRemaining, timer, timerOn, turnEndAlert, turnStartAlert;
    $scope.currentCard = Game.currentCard;
    $scope.skip = Game.skip;
    $scope.foul = Game.foul;
    $scope.got = Game.got;
    $scope.currentTeam = Game.currentTeam;
    $scope.currentRound = Game.currentRound;
    maxSkips = 2;
    $scope.unSkippable = function() {
      return Game.skips >= maxSkips;
    };
    roundAlert = function() {
      stopTimer();
      return $ionicPopup.alert({
        title: Game.currentRound(),
        template: 'Your go continues with a new round.',
        okText: 'Continue'
      }).then(startTimer);
    };
    Game.roundAlert = roundAlert;
    turnEndAlert = function() {
      stopTimer();
      return $ionicPopup.alert({
        title: 'Time\'s up',
        template: (Game.currentTeam().name) + " Team, your turn is over.<br />\nYou got " + Game.turnPoints + " points this turn.<br />\nScores: " + (Game.scoreStr()) + ".",
        okText: 'OK',
        okType: 'button-energized'
      }).then(turnStartAlert);
    };
    Game.turnEndAlert = turnEndAlert;
    turnStartAlert = function() {
      Game.teamSwitch();
      return $ionicPopup.alert({
        title: (Game.currentTeam().name) + " Team, it's your turn",
        template: "It's " + (Game.currentRound()) + ".<br />\nScores: " + (Game.scoreStr()) + ".",
        okText: 'Start turn',
        okType: 'button-balanced'
      }).then(startTimer);
    };
    Game.turnStartAlert = turnStartAlert;
    gameOverAlert = function() {
      stopTimer();
      return $ionicPopup.alert({
        title: 'Game over',
        template: "Scores: " + (Game.scoreStr()) + ".",
        okText: 'Start new game',
        okType: 'button-assertive'
      }).then(function() {
        return Game.newGame();
      });
    };
    Game.gameOverAlert = gameOverAlert;
    newGameAlert = function() {
      stopTimer();
      return $ionicPopup.alert({
        title: 'Get ready',
        template: (Game.currentTeam().name) + " Team, you're up first.<br />\nIt's " + (Game.currentRound()) + ".",
        okText: 'Start game',
        okType: 'button-balanced'
      }).then(startTimer);
    };
    Game.newGameAlert = newGameAlert;
    goLength = 60;
    timeRemaining = goLength * 10;
    timerOn = true;
    timer = function() {
      if (timerOn) {
        timeRemaining -= 1;
        if (timeRemaining <= 0) {
          timeRemaining = goLength * 10;
          return Game.nextTeam();
        }
      }
    };
    counter = {};
    resetTimer = function() {
      return timeRemaining = goLength * 10;
    };
    Game.resetTimer = resetTimer;
    startTimer = function() {
      timerOn = true;
      return $scope.displayName = true;
    };
    stopTimer = function() {
      timerOn = false;
      return $scope.displayName = false;
    };
    $scope.timePercent = function() {
      return timeRemaining / goLength / 10 * 100;
    };
    $interval(timer, 100);
    $scope.displayName = false;
    return Game.newGame();
  });

}).call(this);
