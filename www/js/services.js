// Generated by CoffeeScript 1.9.0
(function() {
  angular.module('starter.services', []).factory('Game', function() {
    var cardAction, cardBank, numCards, o;
    o = {};
    cardBank = [
      {
        text: "David Cameron"
      }, {
        text: "Gordon Brown"
      }, {
        text: "Tony Blair"
      }, {
        text: "Sir John Major"
      }, {
        text: "Baroness Margaret Thatcher"
      }, {
        text: "Barack Obama"
      }, {
        text: "George W. Bush"
      }, {
        text: "Bill Clinton"
      }, {
        text: "George H. W. Bush"
      }, {
        text: "Ronald Reagan"
      }, {
        text: "Mickey Mouse"
      }, {
        text: "Peter Pan"
      }, {
        text: "Lance Armstrong"
      }, {
        text: "Jessica Enis"
      }, {
        text: "Michael Jackson"
      }, {
        text: "Norman Cook (Fatboy Slim)"
      }, {
        text: "Madonna"
      }, {
        text: "Jesus"
      }, {
        text: "Muhammad"
      }, {
        text: "Elton John"
      }, {
        text: "Stephen Fry"
      }, {
        text: "Tom Cruise"
      }, {
        text: "Adam Sandler"
      }, {
        text: "Al Pacino"
      }, {
        text: "Adolf Hitler"
      }, {
        text: "Justin Beiber"
      }, {
        text: "Ashton Kutcher"
      }, {
        text: "Richard Branson"
      }, {
        text: "Steve Jobs"
      }, {
        text: "Alexander Graham Bell"
      }, {
        text: "Katy Perry"
      }, {
        text: "Christopher Wren"
      }, {
        text: "Peter Piper"
      }
    ];
    numCards = 30;
    o.gameCards = _.take(_.shuffle(cardBank), numCards);
    o.roundCards = _.shuffle(o.gameCards);
    o.fouledCards = [];
    o.skippedCards = [];
    o.gotCards = [];
    o.currentCard = function() {
      return o.roundCards[0];
    };
    o.skips = 0;
    o.rounds = [];
    o.currentRound = function() {
      return o.rounds[0];
    };
    o.nextRound = function() {
      if (o.rounds.length !== 1) {
        o.roundCards = _.shuffle(o.gameCards);
        o.rounds.shift();
        o.roundAlert();
        o.skippedCards = [];
        return o.skips = 0;
      } else {
        return o.gameOverAlert();
      }
    };
    o.timeLength = 60;
    o.timeRemaining = 60;
    o.timePercent = function() {
      return o.timeRemaining / o.timeLength * 100;
    };
    o.teams = [
      {
        name: 'Blue',
        "class": 'positive'
      }, {
        name: 'Green',
        "class": 'balanced'
      }
    ];
    o.currentTeam = function() {
      return o.teams[0];
    };
    o.nextTeam = function() {
      return o.turnEndAlert();
    };
    o.teamSwitch = function() {
      o.teams.push(o.teams.shift());
      o.roundCards = _.shuffle(o.roundCards.concat(o.skippedCards));
      o.fouledCards = [];
      o.skippedCards = [];
      o.gotCards = [];
      o.turnPoints = 0;
      return o.skips = 0;
    };
    o.scores = {
      Blue: 0,
      Green: 0
    };
    o.scoreStr = function() {
      var name, score;
      return ((function() {
        var _ref, _results;
        _ref = o.scores;
        _results = [];
        for (name in _ref) {
          score = _ref[name];
          _results.push(name + ": " + score);
        }
        return _results;
      })()).join(", ");
    };
    o.turnPoints = 0;
    cardAction = function(points, store) {
      return function() {
        store.push(o.roundCards.shift());
        o.scores[o.currentTeam().name] += points;
        o.turnPoints += points;
        if (o.roundCards.length === 0) {
          return o.nextRound();
        }
      };
    };
    o.foul = cardAction(-1, o.fouledCards);
    o.skip = function() {
      o.skippedCards.push(o.roundCards.shift());
      return o.skips++;
    };
    o.got = cardAction(1, o.gotCards);
    o.newGame = function() {
      o.rounds = ["Round 1: No limit", "Round 2: Three words", "Round 3: One word", "Round 4: No words"];
      o.gameCards = _.take(_.shuffle(cardBank), numCards);
      o.roundCards = _.shuffle(o.gameCards);
      o.scores = {
        Blue: 0,
        Green: 0
      };
      o.turnPoints = 0;
      o.teams = _.shuffle(o.teams);
      o.newGameAlert();
      o.skips = 0;
      return o.resetTimer();
    };
    return o;
  });

}).call(this);
